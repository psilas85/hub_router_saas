FROM psilas85/hub_router-base:latest

WORKDIR /app

# Copia apenas requirements para cache do build
COPY src/ml_pipeline/requirements.txt /app/ml_pipeline/requirements.txt
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r /app/ml_pipeline/requirements.txt

# Copia todo c√≥digo fonte
COPY src/ /app/src

# üîë Garante que trainers.py atualizado sobrescreva qualquer vers√£o antiga
COPY src/ml_pipeline/models/trainers.py /app/src/ml_pipeline/models/trainers.py

# Adiciona src no PYTHONPATH para evitar import errors
ENV PYTHONPATH=/app/src

# Porta default, pode ser sobrescrita no docker-compose ou .env
ENV SERVICE_PORT=8011

EXPOSE 8011

# Garante que n√£o existem .pyc antigos
RUN find /app/src -name "*.pyc" -delete && \
    find /app/src -name "__pycache__" -type d -exec rm -rf {} +

# Usa a porta da env (se alterada no .env, n√£o precisa rebuildar imagem)
CMD ["sh", "-c", "uvicorn ml_pipeline.api.main_ml_service:app --host 0.0.0.0 --port ${SERVICE_PORT}"]
